# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest 
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.1'
    
    - name: Build for Linux (Ubuntu)
      run: |
        APP_NAME="generador-archivos-ubuntu" # <-- ¡IMPORTANTE! Cambia esto
        mkdir -p bin/linux # Este comando crea el directorio bin/linux si no existe
        GOOS=linux GOARCH=amd64 go build -o bin/linux/${APP_NAME} .

    - name: Build for Windows
      run: |
        APP_NAME="generador-archivos-windows" # <-- ¡IMPORTANTE! Cambia esto
        mkdir -p bin/windows # Este comando crea el directorio bin/windows si no existe
        GOOS=windows GOARCH=amd64 go build -o bin/windows/${APP_NAME}.exe .

    - name: Test
      run: go test -v ./...
    
    - name: List build directory contents (for debugging)
      run: ls -R bin

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-linux-${{ github.ref_name }}-${{ github.sha }}
        path: bin/linux/

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-windows-${{ github.ref_name }}-${{ github.sha }}
        path: bin/windows/
